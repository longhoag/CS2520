# -*- coding: utf-8 -*-
"""lab6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NNFK_ZtvLPRb3tH3B4WZy4FOzZyTtX89
"""

#Name: Long Hoang
#Lab 6

import random

"""#Task 1

This program will create lists in various ways
"""

def task1():
  print("List 1\n")
  #List 1
  list1 = []
  while True:
    num = float(input("Enter a number: "))
    #if enetered number is negative -> quit
    if num < 0:
      break
    list1.append(num)
  print(f"List 1 is {list1}")

  print("\nList 2\n")
  #List 2
  n = int(input("Enter a positive integer n as list size: "))

  #generate n random float numbers from 0.0 to 10.0
  list2 = [round(random.uniform(0, 10), 1) for _ in range(n)]

  print(f"List 2 is {list2}")

"""#Task 2

THis program will perform conversions between sequences
"""

def task2():

  s = input("Enter a string: ")

  #make a list of vowels
  vowels = ['a', 'e', 'i', 'o', 'u']

  #convert string to tuple
  t = tuple(s)

  #initialize count
  count = 0

  for i in t:
    # if vowels found, increment count
    if i in vowels:
      count += 1

  print(f"The number of vowels in {s} is {count}")

"""#Task 3

This program will perform special operations on sequences using zip() and enumerate()
"""

def task3():
  #sample data
  semesters = ['Fall', 'Winter', 'Spring', 'Summer']
  enrollments = [215, 21, 187, 58]

  # list of (semester, enrollment)
  z = list(zip(semesters, enrollments))

  # list of (index, semester)
  e = list(enumerate(semesters, start=1))

  print("1st test: ")
  print(z)
  print(e)

  #my data
  month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
  day = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

  # list of (month, day)
  z2 = list(zip(month, day))

  # list of (index, month)
  e2 = list(enumerate(month, start=1))

  print("\n2nd test: ")
  print(z2)
  print(e2)

def main():
  print("Task 1:\n")
  task1()

  print("\nTask 2:\n")
  task2()

  print("\nTask 3:\n")
  task3()

main()

#output task 1
# output list 1
'''
Enter a number: 10.2
Enter a number: 20.1
Enter a number: 15.2
Enter a number: -2.5
List 1 is [10.2, 20.1, 15.2]
'''

'''
Enter a number: -1
List 1 is []
'''

'''
Enter a number: 25.3
Enter a number: 3.6
Enter a number: 65
Enter a number: 2.45
Enter a number: 6593
Enter a number: 52.36
Enter a number: 452.3
Enter a number: 65.23
Enter a number: 56.2
Enter a number: -9
List 1 is [25.3, 3.6, 65.0, 2.45, 6593.0, 52.36, 452.3, 65.23, 56.2]
'''

# output list 2

'''
Enter a positive integer n as list size: 5
List 2 is [5.2, 3.0, 8.0, 1.3, 2.9]
'''

'''
Enter a positive integer n as list size: 0
List 2 is []
'''

'''
Enter a positive integer n as list size: 20
List 2 is [4.1, 1.8, 5.0, 0.1, 6.1, 7.0, 7.3, 1.8, 1.6, 1.7, 0.6, 7.4, 5.2, 3.1, 9.3, 5.6, 2.7, 5.8, 1.8, 8.5]
'''

# output task 2

'''
Enter a string: hello
The number of vowels in hello is 2
'''

'''
Enter a string: X
The number of vowels in X is 0
'''

'''
Enter a string: &
The number of vowels in & is 0
'''

'''
Enter a string: Harry Potter
The number of vowels in Harry Potter is 3
'''

# output task 3

'''
1st test:
[('Fall', 215), ('Winter', 21), ('Spring', 187), ('Summer', 58)]
[(1, 'Fall'), (2, 'Winter'), (3, 'Spring'), (4, 'Summer')]

2nd test:
[('Jan', 31), ('Feb', 28), ('Mar', 31), ('Apr', 30), ('May', 31), ('Jun', 30), ('Jul', 31), ('Aug', 31), ('Sep', 30), ('Oct', 31), ('Nov', 30), ('Dec', 31)]
[(1, 'Jan'), (2, 'Feb'), (3, 'Mar'), (4, 'Apr'), (5, 'May'), (6, 'Jun'), (7, 'Jul'), (8, 'Aug'), (9, 'Sep'), (10, 'Oct'), (11, 'Nov'), (12, 'Dec')]

'''